---
import { AstroSeo, type AstroSeoProps } from "@astrolib/seo";
import BaseHead from "@components/BaseHead.astro";
import BackgroundTexture from "@components/global/BackgroundTexture.astro";
import Footer from "@components/global/Footer.astro";
import Navigation from "@components/global/Navigation.astro";
import { getLangFromUrl } from "../i18n/utils";

const { pathname } = Astro.url;

type Props = {
	seo?: AstroSeoProps;
};

const { seo: seoProp } = Astro.props;

const lang = getLangFromUrl(Astro.url);

const shareImage = new URL("/images/meta/adverse_selection_banner.webp ", Astro.site).toString();

const defaultSeo: AstroSeoProps = {
	title: "Summer Camp",
	description:
		"A container for the greater Lighthaven community to run intimate, multi-day events in the most target-rich environment that exists for them, anywhere in the world, any time in the year.",
	canonical: "https://summercampcomingsoon.com",
	openGraph: {
		url: "https://summercampcomingsoon.com",
		title: "Summer Camp",
		description:
			"A container for the greater Lighthaven community to run intimate, multi-day events in the most target-rich environment that exists for them, anywhere in the world, any time in the year.",
		images: [
			{
				url: shareImage,
				width: 1200,
				height: 630,
				alt: "Social open graph",
				type: "image/gif",
			},
			{
				url: shareImage,
				width: 4096,
				height: 4096,
				alt: "Twitter open graph",
				type: "image/gif",
			},
		],
		site_name: "Summer Camp",
	},
	// twitter: {
	// 	handle: "@summercampcomingsoon",
	// 	site: "@summercampcomingsoon",
	// 	cardType: "summary_large_image",
	// },
	additionalMetaTags: [
		{
			name: "publisher",
			content: "Arbor",
		},
	],
};

const seo = {
	...defaultSeo,
	...seoProp,
};

function cursorFollowerActive() {
	const paths = ["", "/", "/it/", "/it"];
	return paths.includes(pathname);
}
---

<html lang={lang} class="light">
	<head>
		<BaseHead />
		<AstroSeo {...seo} />
		<script>
			// Force light mode
			localStorage.setItem('theme', 'light');
			document.documentElement.classList.remove('dark');
			document.documentElement.classList.add('light');
		</script>
		<link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Playfair+Display:wght@400;700&family=Lora:wght@400;500;600&display=swap" />
	</head>
	<body class="bg-night-900/20 text-campfire-100 bg-fixed bg-blend-multiply font-serif">
		<!-- Replace the fixed gradient div with this -->
		<div id="scrolling-gradient" class="fixed inset-0 bg-gradient-to-b from-transparent via-night-900/0 to-night-900/0 z-[-2]"></div>
		
		<!-- Background image with higher opacity -->
		<div class="fixed inset-0 bg-[url('/images/summer_camp_aesthetic_1.png')] bg-cover bg-center opacity-75 z-[-3]"></div>
		
		<!-- Subtle paper texture overlay -->
		<div class="fixed inset-0 bg-[url('https://www.transparenttextures.com/patterns/paper-fibers.png')] opacity-5 z-[-1]"></div>
		
		<!-- String lights across the page -->
		<div class="string-lights-container fixed w-full h-full overflow-hidden z-[1] pointer-events-none">
			<div class="string-lights-diagonal"></div>
		</div>
		
		<Navigation />
		<slot />
		<Footer />
		<!-- Add this script before the closing body tag -->
		<script>
			import { gsap } from "gsap";
			import { ScrollTrigger } from "gsap/ScrollTrigger";
			
			gsap.registerPlugin(ScrollTrigger);
			
			document.addEventListener("DOMContentLoaded", () => {
				gsap.to("#scrolling-gradient", {
					scrollTrigger: {
						trigger: "#hero",
						start: "top top",
						end: "bottom top",
						scrub: true,
					},
					backgroundImage: "linear-gradient(to bottom, rgba(17,24,39,0.3), rgba(17,24,39,0.6) 50%, rgba(17,24,39,0.85))",
					ease: "power1.inOut"
				});
			});
		</script>
	</body>
</html>

<style>
	/* Diagonal hanging string lights */
	.string-lights-container {
		position: fixed;
		width: 100%;
		height: 100%;
		pointer-events: none;
	}
	
	.string-lights-diagonal {
		position: absolute;
		width: 100%;
		height: 100%;
		background-image: 
			radial-gradient(circle, rgba(255,215,128,0.8) 0%, rgba(255,215,128,0) 70%),
			linear-gradient(to bottom, transparent, transparent);
		background-size: 30px 30px, 100% 100%;
		background-position: 0 0, 0 0;
		background-repeat: space, no-repeat;
		mask-image: 
			linear-gradient(45deg, #000 1px, transparent 1px),
			linear-gradient(135deg, #000 1px, transparent 1px);
		mask-size: 30px 30px, 30px 30px;
		mask-position: 0 0, 0 0;
		animation: twinkle 3s infinite alternate;
	}

	@keyframes twinkle {
		0% {
			opacity: 0.5;
			filter: blur(0.5px) brightness(0.8);
		}
		50% {
			opacity: 0.8;
			filter: blur(0.5px) brightness(1);
		}
		100% {
			opacity: 0.6;
			filter: blur(0.5px) brightness(0.9);
		}
	}

	/* Enhance overall typography */
	:global(h1, h2, h3, h4) {
		font-family: 'Playfair Display', serif;
		letter-spacing: -0.025em;
	}
	
	:global(body) {
		font-family: 'Lora', serif;
	}
</style>
