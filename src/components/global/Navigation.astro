---
import { Image } from "astro:assets";
import { Icon } from "astro-icon/components";
import { getLangFromUrl, getUrlWithoutLang, useTranslations, useTranslatedPath } from "@i18n/utils";

const isDev = import.meta.env.DEV;

const lang = getLangFromUrl(Astro.url);
const path = getUrlWithoutLang(Astro.url);
const t = useTranslations(lang);
const translatePath = useTranslatedPath(lang);

let pages = [
	{
		title: "Home",
		url: "/",
	},
	// {
	// 	title: "Services",
	// 	url: "/services",
	// },
	{
		title: "Buy",
		url: "/buy/",
	},
	{
		title: t("contact"),
		url: "/contact/",
	},
];

// if (isDev) {
// 	pages.push({
// 		title: "Overview",
// 		url: "/system/overview",
// 	});
// }

const { pathname } = Astro.url;
---

<header id="main-header" class="fixed top-0 left-0 w-full z-40 transition-all duration-300">
	<div class="container mx-auto px-8">
		<nav class="flex items-center justify-between py-4">
			<!-- Logo -->
			<a href="/" class="flex items-center space-x-2">
				<span class="text-2xl font-display font-bold text-forest-700">Scarborough Fair</span>
			</a>
			
			<!-- Desktop navigation -->
			<div class="hidden md:flex items-center space-x-8">
				<a href="/" class="text-forest-700 hover:text-forest-900 transition-colors">Home</a>
				<a href="#services" class="text-forest-700 hover:text-forest-900 transition-colors">Services</a>
				<a href="#work" class="text-forest-700 hover:text-forest-900 transition-colors">Activities</a>
				<a href="#" class="text-forest-700 hover:text-forest-900 transition-colors">About</a>
				<a href="#" class="text-forest-700 hover:text-forest-900 transition-colors">Contact</a>
				
				<!-- CTA Button -->
				<a 
					href="#" 
					class="watercolor-btn px-6 !py-2 rounded-lg transition-colors shadow-md hover:shadow-lg"
				>
					Buy Tickets
				</a>
			</div>
			
			<!-- Mobile menu button -->
			<button id="mobile-menu-button" class="md:hidden text-forest-700 hover:text-forest-900 transition-colors">
				<Icon name="mdi:menu" class="w-8 h-8" />
			</button>
		</nav>
	</div>
	
	<!-- Mobile menu -->
	<div id="mobile-menu" class="fixed inset-0 bg-sky-100 z-50 flex flex-col justify-center items-center transform translate-x-full transition-transform duration-300">
		<button id="close-mobile-menu" class="absolute top-6 right-8 text-forest-700 hover:text-forest-900 transition-colors">
			<Icon name="mdi:close" class="w-8 h-8" />
		</button>
		
		<div class="flex flex-col items-center space-y-6 text-xl">
			<a href="/" class="text-forest-700 hover:text-forest-900 transition-colors">Home</a>
			<a href="#services" class="text-forest-700 hover:text-forest-900 transition-colors">Services</a>
			<a href="#work" class="text-forest-700 hover:text-forest-900 transition-colors">Activities</a>
			<a href="#" class="text-forest-700 hover:text-forest-900 transition-colors">About</a>
			<a href="#" class="text-forest-700 hover:text-forest-900 transition-colors">Contact</a>
			
			<!-- CTA Button -->
			<a 
				href="#" 
				class="bg-meadow-500 hover:bg-meadow-600 text-white px-6 py-2 rounded-lg transition-colors shadow-md hover:shadow-lg mt-4"
			>
				Buy Tickets
			</a>
		</div>
	</div>
</header>

<style>
	.navigation {
		mix-blend-mode: difference;
	}
	.navigation.navbar-open {
		mix-blend-mode: luminosity;
	}
	.navigation,
	.logo {
		padding: 1rem var(--base-padding-x);
	}
	@media (min-width: 768px) {
		.navigation,
		.logo {
			padding: 2rem var(--base-padding-x);
		}
	}
	.resizable:before {
		content: "|";
		position: absolute;
		left: 0.4rem;
		top: 0.36rem;
		font-size: 12px;
		line-height: 23px;
		color: #8e8e8e;
		opacity: 0;
		text-shadow: 4px 0 #8e8e8e;
		transition: all 0.5s ease;
	}
	.collapsed .resizable:before {
		opacity: 1;
	}
	nav a .menu-item-container {
		border-radius: 0.45rem;
	}
	nav a.active .menu-item-container,
	nav a:hover .menu-item-container {
		transition: background-color 0.3s ease;
	}
	nav ul:not(.collapsed) a.active .menu-item-container {
		transition-duration: 0.5s;
		background: #aaa;
	}
	nav ul:not(.collapsed) a:hover .menu-item-container {
		background: #fff;
	}
	nav ul:not(.collapsed) a.active .menu-item-container .menu-item,
	nav ul:not(.collapsed) a:hover .menu-item-container .menu-item {
		color: #000;
	}
	nav ul.collapsed a.active .menu-item-container .menu-item,
	nav ul.collapsed a:hover .menu-item-container .menu-item {
		color: #fff;
	}
</style>

<script>
	import { gsap } from "gsap";
	import { ScrollTrigger } from "gsap/ScrollTrigger";
	import { DrawSVGPlugin } from "gsap/DrawSVGPlugin";

	gsap.registerPlugin(DrawSVGPlugin, ScrollTrigger);

	function init() {
		gsap.timeline({
			defaults: {
				duration: 1,
				ease: "power2.out",
			},
		})
			.from(".logo-svg path", { drawSVG: 0 })
			.to(".logo-svg path", { fill: "#000", duration: 2 }, "<+=0.5");

		let isHoveringMenu = false;
		let menuCollapsed = false;

		const pageLinksUl = document.querySelector("header .nav-container nav ul");

		if (!pageLinksUl) {
			return;
		}

		let menuCollapseTl = gsap
			.timeline({
				defaults: {
					ease: "back.inOut(1.7)",
					duration: 0.4,
				},
				paused: true,
				onStart: () => {
					pageLinksUl.classList.add("collapsed");
				},
			})
			.to("header .nav-container", { width: 125 })
			.to(
				pageLinksUl,
				{
					x: () => {
						const pathName = window.location.pathname;

						if (pathName === "/" || pathName === "/it/") {
							return "9.5rem";
						} else if (pathName.startsWith("/blog") || pathName.startsWith("/it/blog")) {
							return "3.5rem";
						}

						return "-3.5rem";
					},
				},
				"<",
			);

		const isTouchDevice = window.matchMedia("(hover: none)").matches;

		if (window.innerWidth >= 768 && !isTouchDevice) {
			function expandMenu() {
				menuCollapseTl.reverse();
				pageLinksUl?.classList.remove("collapsed");
				document.querySelector("header .navigation")?.classList.remove("collapsed");
				menuCollapsed = false;
			}

			function collapseMenu() {
				if (window.scrollY > 200) {
					menuCollapseTl.play();
					pageLinksUl?.classList.add("collapsed");
					document.querySelector("header .navigation")?.classList.add("collapsed");
					menuCollapsed = true;
				}
			}

			collapseMenu();

			const navContainer = document.querySelector(".nav-container") as HTMLElement;

			function mouseEnterHandler() {
				isHoveringMenu = true;
				expandMenu();
			}

			function mouseLeaveHandler() {
				isHoveringMenu = false;
				collapseMenu();
			}

			function handleScroll() {
				if (window.scrollY > 200 && !isHoveringMenu && !menuCollapsed) {
					collapseMenu();
				} else if (window.scrollY <= 200 && menuCollapsed) {
					expandMenu();
				}
			}

			navContainer?.removeEventListener("mouseenter", mouseEnterHandler);
			navContainer?.addEventListener("mouseenter", mouseEnterHandler);

			navContainer?.removeEventListener("mouseleave", mouseLeaveHandler);
			navContainer?.addEventListener("mouseleave", mouseLeaveHandler);

			window?.removeEventListener("scroll", handleScroll);
			window?.addEventListener("scroll", handleScroll);
		}

		// Add FAQ scroll handling
		const faqLink = document.querySelector('a[data-faq-link]');
		faqLink?.addEventListener('click', (e) => {
			// Check if we're on the homepage
			if (window.location.pathname === '/' || window.location.pathname === '/it/') {
				e.preventDefault();
				gsap.to(window, {
					duration: 0.5,
					scrollTo: "#faq"
				});
			}
			// If not on homepage, let the normal navigation happen with the #faq hash
		});

		// Check for hash on page load
		if (window.location.hash === '#faq') {
			gsap.to(window, {
				duration: 0.5,
				scrollTo: "#faq",
				delay: 0.1 // Small delay to ensure elements are loaded
			});
		}
	}

	document.removeEventListener("DOMContentLoaded", init); // astro:page-load
	document.addEventListener("DOMContentLoaded", init); // astro:page-load

	// Add scroll behavior for navbar
	const navbar = document.getElementById('navbar');
	
	window.addEventListener('scroll', () => {
		if (window.scrollY > 50) {
			navbar.classList.add('bg-night-900/90', 'backdrop-blur-sm', 'shadow-md');
		} else {
			navbar.classList.remove('bg-night-900/90', 'backdrop-blur-sm', 'shadow-md');
		}
	});

	// Handle navigation background on scroll
	function handleNavigation() {
		const header = document.getElementById('main-header');
		if (!header) return;
		
		const scrollWatcher = () => {
			// Calculate opacity based on scroll position
			const scrollY = window.scrollY;
			const minOpacity = 20; // Starting at 20% opacity
			const maxOpacity = 70; // Max at 80% opacity
			const scrollThreshold = 300; // Longer scroll distance for smoother transition
			
			// Calculate opacity value between min and max based on scroll position
			const opacity = Math.min(
				minOpacity + ((maxOpacity - minOpacity) * scrollY / scrollThreshold), 
				maxOpacity
			);
			
			if (scrollY > 10) {
				// Apply calculated opacity with backdrop blur and shadow
				header.style.backgroundColor = `rgba(226, 242, 253, ${opacity / 100})`;
				header.classList.add('backdrop-blur-sm', 'shadow-md');
			} else {
				// Reset to initial state
				header.style.backgroundColor = '';
				header.classList.remove('backdrop-blur-sm', 'shadow-md');
			}
		};
		
		window.addEventListener('scroll', scrollWatcher);
		scrollWatcher(); // Initial check
		
		// Mobile menu functionality
		const mobileMenuButton = document.getElementById('mobile-menu-button');
		const closeMenuButton = document.getElementById('close-mobile-menu');
		const mobileMenu = document.getElementById('mobile-menu');
		const mobileMenuLinks = mobileMenu?.querySelectorAll('a');
		
		if (mobileMenuButton && closeMenuButton && mobileMenu) {
			mobileMenuButton.addEventListener('click', () => {
				mobileMenu.classList.remove('translate-x-full');
				document.body.style.overflow = 'hidden';
			});
			
			closeMenuButton.addEventListener('click', () => {
				mobileMenu.classList.add('translate-x-full');
				document.body.style.overflow = '';
			});
			
			mobileMenuLinks?.forEach(link => {
				link.addEventListener('click', () => {
					mobileMenu.classList.add('translate-x-full');
					document.body.style.overflow = '';
				});
			});
		}
	}

	document.addEventListener('DOMContentLoaded', handleNavigation);
</script>
