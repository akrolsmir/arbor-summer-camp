---
import { getLangFromUrl, useTranslations, useTranslatedPath } from "@i18n/utils";

const { class: className } = Astro.props;

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
const translatePath = useTranslatedPath(lang);

// Hardcoded questions and answers for testing
// Replace these with your actual translations once we confirm it works
const faqs = [
	{
		question: "What is Arbor Summer College?",
		answer: "Arbor Summer College is a container for the greater Lighthaven community to run intimate, multi-day events in the most target-rich environment that exists for them, anywhere in the world, any time in the year."
	},
	{
		question: "When and where is it happening?",
		answer: "It's taking place from June 2-6 at Lighthaven. The event includes lunch and dinner for all five days."
	},
	{
		question: "How can I get tickets?",
		answer: "You can purchase tickets directly from our website. Single-day passes with or without meals are also available."
	},
	{
		question: "Is accommodation available?",
		answer: "Yes, accommodation at Lighthaven will soon be available for purchase."
	},
	{
		question: "What activities will be available?",
		answer: "The event includes coworking, collaborating, and late campfire chats. Other possible adventures will be announced in due time."
	},
	{
		question: "Who is organizing this event?",
		answer: "A mysterious organization called Arbor has stepped forward to run this experimental summer camp."
	}
];

// Uncomment this once we confirm the component works
// const faqs = [
//     {
//         question: t("faqs.question1"),
//         answer: t("faqs.answer1"),
//     },
//     {
//         question: t("faqs.question2"),
//         answer: t("faqs.answer2"),
//     },
//     {
//         question: t("faqs.question3"),
//         answer: t("faqs.answer3"),
//     },
//     {
//         question: t("faqs.question4"),
//         answer: t("faqs.answer4"),
//     },
//     {
//         question: t("faqs.question5"),
//         answer: t("faqs.answer5"),
//     },
//     {
//         question: t("faqs.question6"),
//         answer: t("faqs.answer6"),
//     },
// ];
---

<section id="faq" class:list={["section faq-section relative bg-forest-50 text-forest-950", className]}>
	<div class="wrapper w-full py-10">
		<div class="mx-auto max-w-5xl px-4">
			<h2 class="mb-12 font-display text-4xl font-bold md:text-5xl">FAQ</h2>
			
			<div class="faq-grid grid gap-4 md:grid-cols-2">
				{
					faqs.map(({ question, answer }, index) => (
						<div class="faq-item overflow-hidden rounded-lg border border-forest-200 bg-white shadow-sm">
							<details class="group">
								<summary class="flex cursor-pointer items-center justify-between gap-2 p-4 font-medium">
									<span>{question}</span>
									<svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 transform text-forest-700 transition-transform duration-200 group-open:rotate-180" viewBox="0 0 20 20" fill="currentColor">
										<path fill-rule="evenodd" d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z" clip-rule="evenodd" />
									</svg>
								</summary>
								<div class="px-4 pb-4 pt-0">
									<p class="text-forest-800">{answer}</p>
								</div>
							</details>
						</div>
					))
				}
			</div>
			
			<div class="mt-12 flex justify-center">
				<div class="rounded-lg bg-campfire-500 hover:bg-campfire-600 transition-colors" data-cursor-hover data-cursor-parallax>
					<a
						class="flex h-10 w-full items-center justify-center px-6 py-2 text-lg text-white transition-all hover:text-white sm:w-auto md:font-bold"
						href={translatePath("/contact/")}>
						{t("contactus")}
					</a>
				</div>
			</div>
		</div>
	</div>
</section>

<style>
	details summary {
		list-style: none;
	}
	
	details summary::-webkit-details-marker {
		display: none;
	}
	
	.faq-section {
		position: relative;
		overflow: hidden;
	}
	
	.faq-section::before {
		content: '';
		position: absolute;
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;
		background-image: url('/images/texture-light.png');
		background-size: cover;
		background-position: center;
		opacity: 0.05;
		z-index: 0;
	}
	
	.faq-item {
		position: relative;
		z-index: 1;
	}
</style>

<script>
	import { gsap } from "gsap";
	import { ScrollTrigger } from "gsap/ScrollTrigger";

	gsap.registerPlugin(ScrollTrigger);

	function init() {
		// Animate FAQ items on scroll
		gsap.from(".faq-item", {
			y: 30,
			opacity: 0,
			stagger: 0.1,
			duration: 0.6,
			ease: "power2.out",
			scrollTrigger: {
				trigger: ".faq-grid",
				start: "top 80%",
				toggleActions: "play none none none"
			}
		});
	}

	document.removeEventListener("DOMContentLoaded", init);
	document.addEventListener("DOMContentLoaded", init);
</script>
